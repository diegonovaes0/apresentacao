---
# site24x7_shell_script_install_non_interactive.yml
# Cria um script .sh que lida com prompts interativos

- name: Instalação não-interativa do Site24x7 via script shell
  hosts: localhost
  become: yes
  vars:
    site24x7_api_key: "us_6499e42d6685af5f41ae1d82a68b4cc6"
    script_dir: "/arquivos"
    script_name: "instalar_site24x7.sh"

  tasks:
    # Fase 1: Verificar dependências
    - name: Verificar se o expect está instalado
      package:
        name: expect
        state: present
      ignore_errors: yes
      register: expect_install

    # Fase 2: Limpeza da instalação existente
    - name: Parar serviço se existir (systemd)
      shell: systemctl stop site24x7monagent.service
      ignore_errors: yes

    - name: Parar serviço se existir (init.d)
      shell: /etc/init.d/site24x7monagent stop
      ignore_errors: yes

    - name: Remover diretórios do Site24x7 (limpeza forçada)
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /opt/site24x7
        - /var/log/site24x7
        - /etc/init.d/site24x7*
        - /etc/systemd/system/site24x7*.service
      ignore_errors: yes

    # Fase 3: Criar o script de instalação não-interativo
    - name: Criar diretório para o script no servidor
      file:
        path: "{{ script_dir }}"
        state: directory
        mode: "0777"

    # Script principal de instalação
    - name: Criar script principal de instalação
      copy:
        dest: "{{ script_dir }}/{{ script_name }}"
        content: |
          #!/bin/bash
          # Script não-interativo de instalação do Site24x7
          
          echo "Iniciando instalação do Site24x7..."
          echo "Chave API: {{ site24x7_api_key }}"
          echo "Data e hora: $(date)"
          
          # Download do instalador diretamente no servidor
          echo "Fazendo download do instalador..."
          wget -q https://staticdownloads.site24x7.com/server/Site24x7_Linux_64bit.install -O /tmp/Site24x7_Linux_64bit.install
          chmod +x /tmp/Site24x7_Linux_64bit.install
          
          # Executar instalador com opções não-interativas
          echo "Executando instalação..."
          echo "yes" | /tmp/Site24x7_Linux_64bit.install -i -key={{ site24x7_api_key }} -installer=ansible -Force=true
          
          # Verificar status
          echo "Verificando status após instalação..."
          if [ -f /etc/init.d/site24x7monagent ]; then
            /etc/init.d/site24x7monagent status
          fi
          
          echo "Instalação concluída!"
          exit 0
        mode: "0777"

    # Script alternativo usando expect
    - name: Criar script expect para respostas automáticas
      copy:
        dest: "{{ script_dir }}/install_expect.exp"
        content: |
          #!/usr/bin/expect -f
          
          set timeout -1
          
          spawn bash -c "curl -sL https://staticdownloads.site24x7.com/server/Site24x7InstallScript.sh | bash /dev/stdin -i -key={{ site24x7_api_key }} -automation=true"
          
          expect {
            "Do you want to proceed with the installation?" {
              send "y\r"
              exp_continue
            }
            "Site24x7 monitoring agent is currently installed on this server. Do you want to proceed with the uninstallation?" {
              send "y\r"
              exp_continue
            }
            "Do you want to proceed with the uninstallation?" {
              send "y\r"
              exp_continue
            }
            "Do you want to continue?" {
              send "y\r"
              exp_continue
            }
            eof
          }
          
          exit 0
        mode: "0777"

    # Fase 4: Executar os scripts
    - name: Executar script principal de instalação
      shell: "cd {{ script_dir }} && ./{{ script_name }}"
      register: install_output
      failed_when: false
      
    # Se o script principal falhar, tente o script expect
    - name: Executar script expect (se necessário)
      shell: "cd {{ script_dir }} && ./install_expect.exp"
      register: expect_output
      when: expect_install.failed == false and (install_output.rc != 0 or "'Error' in install_output.stdout")
      failed_when: false

    # Fase 5: Verificar o resultado
    - name: Exibir saída da instalação (script principal)
      debug:
        var: install_output.stdout_lines
      when: install_output.stdout_lines is defined

    - name: Exibir saída da instalação (script expect)
      debug:
        var: expect_output.stdout_lines
      when: expect_output is defined and expect_output.stdout_lines is defined

    # Fase 6: Iniciar o serviço e verificar status
    - name: Iniciar serviço Site24x7 (se ainda não estiver ativo)
      shell: "/etc/init.d/site24x7monagent start || systemctl start site24x7monagent.service"
      ignore_errors: yes
      
    - name: Verificar status final do serviço
      shell: "/etc/init.d/site24x7monagent status || systemctl status site24x7monagent.service"
      register: service_status
      ignore_errors: yes
      
    - name: Exibir status final
      debug:
        var: service_status.stdout_lines