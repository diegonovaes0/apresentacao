
#######################################
#playbook atualizada em 05/02/2025
#######################################
#######################################
      # No Oracle Linux 9, o firewalld é o firewall padrão.
      # No Oracle Linux 9, o serviço 'iptables' foi substituído por 'nftables'.
      # Portanto, desativamos o serviço nftables no lugar de iptables.      
      # Assim como o iptables, o ip6tables também é substituído pelo nftables no Oracle Linux 9.
      # Portanto, desativamos o nftables também para IPv6.
      # O Oracle Linux 9 usa o nftables em vez do iptables para controle de pacotes.
      # Para limpar as regras, usamos o comando 'nft flush ruleset' em vez de 'iptables -F'.
      #######################################
---
- name: Configuração do sistema Oracle Linux (RHEL)
  hosts: all
  become: yes
  vars_prompt:
    - name: new_hostname
      prompt: "Hostname da máquina"
      private: no

  vars:    
    log_timestamp: "{{ lookup('pipe', 'date +%Y-%m-%d_%H-%M-%S') }}"
    ansible_python_interpreter: "auto_silent"
    root_password: "(37&vSvMUHi7mk"
    partner_password: "s3qQj3Ds#iL)7#f"

  pre_tasks:
    - name: Verificar e instalar Python se necessário
      raw: |
        if ! command -v python3 &>/dev/null; then
          if command -v dnf &>/dev/null; then
            dnf install -y python3
          elif command -v yum &>/dev/null; then
            yum install -y python3
          fi
        fi
      changed_when: false
      ignore_errors: yes

  tasks:
    - name: Definir fuso horário para America/Sao_Paulo
      file:
        src: /usr/share/zoneinfo/America/Sao_Paulo
        dest: /etc/localtime
        state: link
        force: yes
      tags: timezone


    - name: Desativar firewalld
      systemd:
        name: firewalld
        state: stopped
        enabled: no
      tags: firewall
      ignore_errors: yes

    - name: Parar o serviço iptables (Oracle Linux 9 usa nftables)
      service:
        name: nftables
        state: stopped
        enabled: no
      tags: firewall
      ignore_errors: yes

    - name: Parar o serviço ip6tables (Oracle Linux 9 usa nftables)
      service:
        name: nftables
        state: stopped
        enabled: no
      tags: firewall
      ignore_errors: yes

    - name: Limpar regras do nftables
      command: nft flush ruleset
      tags: firewall
      ignore_errors: yes


    - name: Atualizar o sistema
      yum:
        name: '*'
        state: latest
      tags: update
      ignore_errors: yes

    - name: Instalar pacotes básicos essenciais
      yum:
        name:
          - epel-release
          - wget
          - lzop
          - vim
          - gdisk
        state: present
      tags: install
      ignore_errors: yes

    - name: Alterar configuração do arquivo /etc/oci-hostname.conf
      lineinfile:
        path: /etc/oci-hostname.conf
        regexp: '^PRESERVE_HOSTINFO=.*$'
        line: 'PRESERVE_HOSTINFO=2'
      tags: oci_hostname
      ignore_errors: yes

    - name: Habilitar login root via SSH
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PermitRootLogin\s+.*'
        line: 'PermitRootLogin yes'
      tags: ssh_config

    - name: Habilitar autenticação por senha no arquivo principal
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PasswordAuthentication\s+.*'
        line: 'PasswordAuthentication yes'
      tags: ssh_config

    # Configurações adicionais no arquivo cloud-init
    - name: Habilitar autenticação por senha no arquivo cloud-init
      lineinfile:
        path: /etc/ssh/sshd_config.d/50-cloud-init.conf
        regexp: '^PasswordAuthentication\s+.*'
        line: 'PasswordAuthentication yes'
        create: yes
      tags: ssh_config

    - name: Reiniciar serviço SSH imediatamente
      service:
        name: sshd
        state: restarted
      tags: ssh_restart  

    - name: Adicionar linha no arquivo /etc/sudoers para o usuário parceiro
      lineinfile:
        path: /etc/sudoers
        line: 'parceiro    ALL=(ALL)       ALL'
        state: present
        create: yes
        validate: 'visudo -cf %s'
      tags: visudo_line
      ignore_errors: yes

    - name: Alterar o hostname da máquina
      ansible.builtin.hostname:
        name: "{{ new_hostname }}"
      tags: hostname
      ignore_errors: yes

    - name: Desativar SELinux
      lineinfile:
        path: /etc/selinux/config
        regexp: '^SELINUX='
        line: 'SELINUX=disabled'
      #notify: 
      #  - Reiniciar sistema
      tags: selinux

    - name: Atualizar /etc/hosts com o novo hostname
      ansible.builtin.lineinfile:
        path: /etc/hosts
        regexp: '^127\.0\.0\.1\s'
        line: "127.0.0.1   {{ new_hostname }} localhost"
        state: present
      tags: hostname
      ignore_errors: yes

    - name: Garantir que o hostname seja atualizado no reboot
      ansible.builtin.command:
        cmd: hostnamectl set-hostname "{{ new_hostname }}"
      tags: hostname
      ignore_errors: yes

    - name: Criar usuário parceiro
      user:
        name: parceiro
        state: present
        shell: /bin/bash
        create_home: yes

    - name: Definir senha para o usuário parceiro usando chpasswd
      shell: echo "parceiro:{{ partner_password }}" | chpasswd
      no_log: true

    - name: Definir senha para o usuário root usando chpasswd
      shell: echo "root:{{ root_password }}" | chpasswd
      no_log: true

    - name: Exibir senha do usuário parceiro
      debug:
        msg: "A senha do usuário parceiro é: [{{ partner_password }}]"    

    - name: Exibir senha do usuário root
      debug:
        msg: "A senha do usuário root é: [{{ root_password }}]"

    - name: Garantir que o diretório temporário /tmp/logs exista no nó remoto
      file:
        path: /tmp/logs
        state: directory
        mode: '0777'
        owner: root
        group: root

    - name: Mostrar o IP público da máquina alvo
      command: curl -s ipinfo.io/ip
      register: target_public_ip    

    - name: Exportar informações para um arquivo de log no nó remoto
      copy:
        content: |
          Timestamp: {{ log_timestamp }}
          Hostname: {{ ansible_facts.hostname | default('Hostname not found') }}
          IP Público: {{ target_public_ip.stdout | default('IP público não encontrado') }}
          IP Address: {{ ansible_facts['default_ipv4'].address | default('IP not found') }}
          Parceiro User: parceiro
          Parceiro Password: [{{ partner_password }}]
          Root Password: [{{ root_password }}]
        dest: "/tmp/logs/{{ ansible_facts.hostname }}_{{ ansible_facts['default_ipv4'].address }}.txt"

    - name: Verificar se o arquivo de log foi criado no nó remoto
      stat:
        path: "/tmp/logs/{{ ansible_facts.hostname }}_{{ ansible_facts['default_ipv4'].address }}.txt"
      register: log_file

    - name: Exibir informações sobre o arquivo de log
      debug:
        var: log_file

    - name: Garantir que o diretório temporário /tmp/logs exista no nó remoto
      file:
        path: /tmp/logs
        state: directory
        mode: '0777'
        owner: root
        group: root

    - name: Mostrar o IP público da máquina alvo
      command: curl -s ipinfo.io/ip
      register: target_public_ip    

    - name: Exportar informações para um arquivo de log no nó remoto
      copy:
        content: |
          Timestamp: {{ log_timestamp }}
          Hostname: {{ ansible_facts.hostname | default('Hostname not found') }}
          IP Público: {{ target_public_ip.stdout | default('IP público não encontrado') }}
          IP Address: {{ ansible_facts['default_ipv4'].address | default('IP not found') }}
          Parceiro User: parceiro
          Parceiro Password: [{{ partner_password }}]
          Root Password: [{{ root_password }}]
        dest: "/tmp/logs/{{ ansible_facts.hostname }}_{{ ansible_facts['default_ipv4'].address }}.txt"

    - name: Verificar se o arquivo de log foi criado no nó remoto
      stat:
        path: "/tmp/logs/{{ ansible_facts.hostname }}_{{ ansible_facts['default_ipv4'].address }}.txt"
      register: log_file

    - name: Exibir informações sobre o arquivo de log
      debug:
        var: log_file

    - name: Garantir que o diretório de logs exista no nó controlador
      file:
        path: /home/opc/logs
        state: directory
        mode: '0777'

    - name: Trazer o arquivo de log para o nó controlador
      fetch:
        src: "/tmp/logs/{{ ansible_facts.hostname }}_{{ ansible_facts['default_ipv4'].address }}.txt"
        dest: "/home/opc/logs/"
        flat: yes
      when: log_file.stat.exists

    - name: Remover o arquivo de log do nó remoto
      file:
        path: "/tmp/logs/{{ ansible_facts.hostname }}_{{ ansible_facts['default_ipv4'].address }}.txt"
        state: absent
      when: log_file.stat.exists

    
  handlers:
  #  - name: Reiniciar SSH
  #    service:
  #      name: sshd
  #      state: restarted

  #  - name: Reiniciar sistema
  #    reboot:
  #      msg: "Reiniciando a máquina via Ansible devido a alteração no SELinux"
  #      connect_timeout: 5
  #      reboot_timeout: 300
  #      pre_reboot_delay: 0
  #      post_reboot_delay: 30
  #      test_command: uptime

    - name: Habilitar autenticação por senha no SSH
      lineinfile:
        path: /etc/ssh/sshd_config.d/50-cloud-init.conf
        regexp: '^PasswordAuthentication\s+.*'
        line: 'PasswordAuthentication yes'
        create: yes
      notify: Reiniciar SSH
