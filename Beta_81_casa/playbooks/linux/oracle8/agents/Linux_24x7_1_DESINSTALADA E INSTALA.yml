---
# site24x7_reinstall_clean.yml
# Playbook Ansible para desinstalar e reinstalar o Site24x7 de forma limpa

- name: Desinstalação e Reinstalação do Site24x7 Agent
  hosts: all
  become: yes
  vars:
    site24x7_api_key: "us_6499e42d6685af5f41ae1d82a68b4cc6"
    temp_dir: "/tmp/site24x7-install"
    installer_script_url: "https://staticdownloads.site24x7.com/server/Site24x7InstallScript.sh"

  tasks:
    # Fase 1: Detecção e verificação do serviço
    - name: Verificar se o serviço Site24x7 existe (systemd)
      command: systemctl list-unit-files site24x7monagent.service
      register: systemd_check
      ignore_errors: yes
      changed_when: false

    - name: Verificar se o serviço Site24x7 existe (init.d)
      stat:
        path: /etc/init.d/site24x7monagent
      register: initd_check

    # Fase 2: Parar serviços
    - name: Parar serviço Site24x7 (systemd)
      systemd:
        name: site24x7monagent
        state: stopped
        enabled: no
      when: systemd_check.rc == 0
      ignore_errors: yes

    - name: Parar serviço Site24x7 (init.d)
      command: /etc/init.d/site24x7monagent stop
      when: initd_check.stat.exists
      ignore_errors: yes

    # Fase 3: Desinstalação oficial
    - name: Verificar se o binário de desinstalação existe
      stat:
        path: /opt/site24x7/monagent/bin/uninstall
      register: uninstaller_exists

    - name: Executar desinstalação oficial (se existir)
      command: /opt/site24x7/monagent/bin/uninstall
      when: uninstaller_exists.stat.exists
      register: uninstall_result
      ignore_errors: yes

    # Fase 4: Limpeza forçada em caso de desinstalação problemática
    - name: Remover diretórios do Site24x7 (limpeza forçada)
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /opt/site24x7
        - /var/log/site24x7
        - /etc/init.d/site24x7*
        - /etc/systemd/system/site24x7*.service
      ignore_errors: yes
   
    - name: Recarregar systemd
      systemd:
        daemon_reload: yes
      ignore_errors: yes

    - name: Aguardar desinstalação terminar completamente
      pause:
        seconds: 10

    # Fase 5: Nova instalação
    - name: Criar diretório temporário para instalação
      file:
        path: "{{ temp_dir }}"
        state: directory
        mode: '0755'

    - name: Download do script de instalação Site24x7
      get_url:
        url: "{{ installer_script_url }}"
        dest: "{{ temp_dir }}/Site24x7InstallScript.sh"
        mode: '0755'

    - name: Executar o script de instalação
      shell: >
        bash {{ temp_dir }}/Site24x7InstallScript.sh -i -key={{ site24x7_api_key }} -automation=true
      args:
        executable: /bin/bash
        chdir: "{{ temp_dir }}"
      register: install_output
      failed_when: false

    - name: Exibir saída da instalação
      debug:
        var: install_output.stdout_lines
      when: install_output.stdout_lines is defined

    # Fase 6: Verificação pós-instalação
    - name: Verificar status do serviço após instalação (systemd)
      command: systemctl status site24x7monagent.service
      register: service_status_systemd
      changed_when: false
      ignore_errors: yes

    - name: Verificar status do serviço após instalação (init.d)
      command: /etc/init.d/site24x7monagent status
      register: service_status_initd
      changed_when: false
      ignore_errors: yes
      when: systemd_check.rc != 0

    - name: Exibir status do serviço
      debug:
        var: item.stdout_lines
      with_items:
        - "{{ service_status_systemd }}"
        - "{{ service_status_initd | default({}) }}"
      when: item.stdout_lines is defined

    # Fase 7: Limpeza
    - name: Limpar diretório temporário após instalação
      file:
        path: "{{ temp_dir }}"
        state: absent